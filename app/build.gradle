import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'


android {
    compileSdkVersion = 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId = 'com.petbot'
        minSdkVersion 14
        targetSdkVersion 22

        ndk {
            abiFilters 'x86', 'armeabi-v7a'
        }
    }
//, 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64', 'armeabi'
    /*sources.main {
        jni {
            source {
                srcDirs = ['src/main/none']
            }
        }

        jniLibs {
            source {
                srcDirs = ['src/main/libs']
            }
        }
    }*/

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }
}


dependencies {
    //compile 'com.android.support:appcompat-v7:18.0.+'

    //compile 'com.android.support:appcompat-v7:22.2.1'

    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:design:22.2.1'
    //compile 'com.android.support:design:+'
    //compile 'com.android.support:support-annotations:+'
    compile 'com.android.support:support-annotations:22.0.0'
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.google.android.gms:play-services-appindexing:9.8.0'

    compile 'com.google.firebase:firebase-core:9.8.0'
    compile 'com.google.firebase:firebase-messaging:9.8.0'
}

// call regular ndk-build(.cmd) script from app directory
/*task ndkBuild(type: Exec) {

    // get NDK directory
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkDir = properties.getProperty('ndk.dir')

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine ndkDir + '/ndk-build.cmd', '-C', file('src/main').absolutePath
    } else {
        commandLine ndkDir + '/ndk-build', 'V=1', '-C', file('src/main').absolutePath
    }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}*/

//task ndkLibsToJar(type: Zip, dependsOn: 'ndkBuild', description: 'Create a JAR of the native libs') {
//    destinationDir new File(buildDir, 'libs')
//    baseName 'ndk-libs'
//    extension 'jar'
//    from(new File(buildDir, 'libs')) { include '**/*.so' }
//    into 'lib/'
//}

//tasks.withType(JavaCompile) {
//    compileTask -> compileTask.dependsOn ndkLibsToJar
//}

apply plugin: 'com.google.gms.google-services' // for firebase
